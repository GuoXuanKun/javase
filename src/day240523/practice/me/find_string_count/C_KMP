#include<stdio.h>
#include<string.h>

void computeLPSArray(char* pat, int M, int* lps);

int KMPSearch(char pat[], char txt[])
{
    int M = strlen(pat);
    int N = strlen(txt);

    int lps[M];

    computeLPSArray(pat, M, lps);

    int i = 0;
    int j = 0;
    int count = 0;
    while (i < N) {
        if (pat[j] == txt[i]) {
            j++;
            i++;
        }

        if (j == M) {
            count++;
            j = lps[j - 1];
        }

        else if (i < N && pat[j] != txt[i]) {
            if (j != 0)
                j = lps[j - 1];
            else
                i = i + 1;
        }
    }
    return count;
}

void computeLPSArray(char pat[], int M, int lps[])
{
    int length = 0;

    lps[0] = 0;

    int i = 1;
    while (i < M) {
        if (pat[i] == pat[length]) {
            length++;
            lps[i] = length;
            i++;
        }
        else
        {
            if (length != 0) {
                length = lps[length - 1];
            }
            else
            {
                lps[i] = 0;
                i++;
            }
        }
    }
}

int main()
{
    char txt[] = "acusbikmnesbciouinsbeik123dsb9";
    char pat[] = "sb";
    int count = KMPSearch(pat, txt);
    printf("Pattern found %d times\n", count);
    return 0;
}
